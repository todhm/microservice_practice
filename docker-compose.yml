version: '3.6'

services:

    users:
        container_name: users
        build:
            context: ./services/users
            dockerfile: Dockerfile-dev
        volumes:
            - './services/users:/usr/src/app'
        ports:
            - 5001:5000
        environment:
            - FLASK_ENV=development
            - APP_SETTINGS=project.config.DevelopmentConfig
            - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
            - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
            - SECRET_KEY=precious
        command: sh /usr/src/app/entrypoint.sh


    users-db:
        container_name: users-db
        build:
            context: ./services/users/project/db
            dockerfile: Dockerfile
        volumes:
            - db-data:/var/lib/postgresql/data
        ports:
            - 5435:5432
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres

    client:
        container_name: client
        build:
            context: ./services/client
            dockerfile: Dockerfile-dev
        
        volumes:
            - './services/client:/usr/src/app'
            - '/usr/src/app/node_modules'
        
        ports:
            - 3007:3000
        env_file:
            - ./services/client/.env
        environment:
            - NODE_ENV=development
            - CHOKIDAR_USEPOLLING=true
            - GENERATE_SOURCEMAP=false

        depends_on:
            - users

        command: npm start


    nginx:
        container_name: nginx
        build:
            context: ./services/nginx
            dockerfile: Dockerfile-dev

        restart: always
        ports:
            - 80:80
        depends_on:
            - users
            - client

volumes:
    db-data: